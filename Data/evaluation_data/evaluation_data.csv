doc,predicted,expected
1,"This section will cover general information about the project perspective, functions, and various requirements and constraints. More detailed descriptions of the project requirements and functions will be covered in latter sections. 2.1 Product Perspective This project is designed to be used by employees of several automotive plants to Prototype V1 will have little functionality, and its main purpose will be to display the user interface as well as to show our interpretation of the requirements. 5.2 Sample Scenarios An employee, Bob, was given the unique four-digit-code 7924 by their The system is a desktop application that requires a computer running Windows Vista SP2 or higher version of Windows operating system. The computer must have Visual C++ Redistributable 2010, as well as .NET Framework 4.0 installed. Prototype V1 will have little functionality, and its main purpose will be to display Vista SP2 or higher version of Windows operating system. The computer must have Visual C++ Redistributable 2010, as well as .NET Framework 4.0 installed. Prototype V1 will have little functionality, and its main purpose will be to display the user interface as well as to show our interpretation of the requirements. 5.2 Sample Scenarios Specification document will further explain the specifics of the software system being produced. Section 2 focuses on the context for needing the proposed system, how it should function, and the related constraints. Section 3 provides a detailed listing of the requirements specific to the system following a hierarchical numbering scheme. Section 4 addresses the modeling requirements which includes use cases diagrams, a state diagram, and a high-level class diagram. Section 5 discusses the proposed prototype and the details of the system with instructions on how to run it as well as sample scenarios. Section 6 contains a list of references used throughout the document. Finally, Section 7 provides contact information used for further inquiries. 2 Overall Description This section will cover general information about the project perspective, functions, and various requirements and constraints. More detailed descriptions of the project requirements and functions will be covered in latter sections. 2.1 Product Perspective","Project Automate Paint Defect Analysis
Solution to the client�s need to automate the recording of paint defects on vehicles during production."
1,"a. This describes the attributes, operations, relationships, and UML extensions for each of the classes in the class diagram. Element Name Description Description Element Name Description Description Defects Provides interface for viewing a given vehicle and the defects associated with it. Supports 3D model of the vehicle with color-coordinated defect visualization. Use Case: Remove Defect Record Actors: Analyst Description: Analyst can remove a defect record if there is an error. Description Description Defects Provides interface for viewing a given vehicle and the defects associated with it. Supports 3D model of the vehicle with color-coordinated defect visualization. Attributes Template based on IEEE Std 830-1998 for SRS. Modifications (content and ordering of information) have been made by James Daly, Michigan State University (dalyjame at cse.msu.edu) components:System.Com ponentModel.IContainer Required designer variable Description: Analyst can remove a defect record if there is an error. - Analyst selects type of report to generate Use Case: Generate Report","To put the proposed system in perspective, the result of the project will be a system with a web interface that allows the client analysts to input defect data about certain models of cars in a standardized fashion. The system will automate the recording of paint defects on vehicles during production and then allow users to run reports on the data. 
The system will eliminate the need for paper diagrams and will allow automatically generate the desired reports from the entered data. Additional benefits include a decrease resources (i.e. ink, paper, etc.) and human error that comes from physically transcribing the vehicle paint defects. Users of the system will be able to track defects over time."
1,"The system will have two separate sets of hardware constraints, one for the end user program, and one for the server architecture. The end user system will need to run on a Windows computer, while the backend will need to run on appropriate server hardware. Both setups require an internet connection, and the server architecture requires enough memory to store the database of past defects. The exact amount of storage required will depend on how long the customer wishes to store past information for. 2.5 Assumptions and Dependencies It is assumed that the end user program will be run on a Windows Vista or newer user program, and one for the server architecture. The end user system will need to run on a Windows computer, while the backend will need to run on appropriate server hardware. Both setups require an internet connection, and the server architecture requires enough memory to store the database of past defects. The exact amount of storage required will depend on how long the customer wishes to store past information for. 2.5 Assumptions and Dependencies It is assumed that the end user program will be run on a Windows Vista or newer Windows system. It is also assumed that the technician using the end user program will have been trained to recognize all the types of paint defects, as it is not the software�۪s purpose to explain how to qualify defects, instead it only stores data on the defects. 2.6 Proportioning of Requirements technicians that are running paint inspections in the car factories. These technicians will be trained to identify types of paint defects, and to run a complete inspection of the entire paint job on a car. After identifying a paint defect of a particular type, these technicians will then enter the defect into the software to store its information in the database. The second type of user will be an administrative user that will utilize the reports the system produces. 2.4 Constraints The system will have two separate sets of hardware constraints, one for the end user program, and one for the server architecture. The end user system will need to run on a Windows computer, while the backend will need to run on appropriate server hardware. Both setups require an internet connection, and the server architecture requires enough memory to store the database of past defects. The exact amount of storage required will depend on how long the customer wishes to store past information for. 2.5 Assumptions and Dependencies 2.3. Analyst marks area of defect on the vehicle wireframes shown 2.3.1. Analyst will drag an ellipsoid over the area of defect and shape the ellipsoid to accurately represent the defect 2.3.2. Color of mark will depend on the type of defect selected in step 2.2 2.3.1. Analyst will drag an ellipsoid over the area of defect and shape the ellipsoid to accurately represent the defect 2.3.2. Color of mark will depend on the type of defect selected in step 2.2 2.4. Analyst enters any notes about defect","Scope : The application domain of the system will be part of the client�s company�s existing computer infrastructure. The application can be run on a standard desktop or laptop computer with internet connection which are located at each inspection checkpoint in order to produce reports identical to those currently generated. The application will support all vehicles in production at any of the three plants, such as the Lansing Delta Township, Lansing Grand River, and Lake Orion Assembly, where the application will be utilized.
Constraints :The system will have two separate sets of hardware constraints, one for the end user program, and one for the server architecture. The end user system will need to run on a Windows computer, while the backend will need to run on appropriate server hardware. Both setups require an internet connection, and the server architecture requires enough memory to store the database of past defects. The exact amount of storage required will depend on how long the customer wishes to store past information for."
1,"Authors: Lisa Doan, Alex Besinger, Patrick McCormick, Samantha Oldenburg, Clayton Peters Customer: General Motors Instructor: James Daly 1 Introduction 1. Analyst loads application and enters identification information 1.1. Analyst enters their first and last name 1.2. Analyst enters the start and end time of their working period, along with which shift they are working 1.3. Analyst selects which checkpoint vehicles are inspected Dividing these features into two executables would simplify work for both types of employees, while hiding unnecessary function. 3 Specific Requirements 1. Analyst loads application and enters identification information 1.1. Analyst enters their first and last name 1.2. Analyst enters the start and end time of their working period, along with which shift they are working Actors: Analyst Description: Analyst enters identifying information, selects their work period, and selects the checkpoint where vehicles are to be inspected. - Analyst inspects a vehicle (repeat until end of shift as vehicles are inspected) 1.2. Analyst enters the start and end time of their working period, along with which shift they are working 1.3. Analyst selects which checkpoint vehicles are inspected 1.4. Analyst saves information entered and information is stored in a database","Software Requirements : 
1. Analyst loads application and enters identification information
1.1. Analyst enters their first and last name
1.2. Analyst enters the start and end time of their working period, along with
which shift they are working
1.3. Analyst selects which checkpoint vehicles are inspected
1.4. Analyst saves information entered and information is stored in a database
2. Analyst inspects a vehicle (repeat until end of shift as vehicles are inspected)
2.1. Analyst selects model of car inspected
2.1.1. Wireframes of selected model shown
2.2. Analyst selects type of defect
2.3. Analyst marks area of defect on the vehicle wireframes shown
2.3.1. Analyst will drag an ellipsoid over the area of defect and shape the
ellipsoid to accurately represent the defect
2.3.2. Color of mark will depend on the type of defect selected in step 2.2
2.4. Analyst enters any notes about defect
2.5. Analyst saves information entered and information is stored in a database
2.6. If necessary, the analyst is able to remove a vehicle inspection information
if they made a mistake entering information

3. Analyst selects type of report to generate
3.1. Analyst selects vehicle inspections to include in report
3.1.1. Able to select or deselect vehicles to include based on GM facility,
checkpoint at which the vehicle was inspected, time and date of
inspection, or type of defect
3.1.1.1. Data from at least ten vehicle inspections must be included

to generate a report

3.2. Data regarding selected vehicle inspections are retrieved from database
and collated
3.3. Selected report is generated

System Requirements : 
The system is a desktop application that requires a computer running Windows Vista SP2 or higher version of Windows operating system. The computer must have Visual C++ Redistributable 2010, as well as .NET Framework 4.0 installed.Prototype V1 will have little functionality, and its main purpose will be to display the user interface as well as to show our interpretation of the requirements."
1,"This section will cover general information about the project perspective, functions, and various requirements and constraints. More detailed descriptions of the project requirements and functions will be covered in latter sections. 2.1 Product Perspective This project is designed to be used by employees of several automotive plants to Specification document will further explain the specifics of the software system being produced. Section 2 focuses on the context for needing the proposed system, how it should function, and the related constraints. Section 3 provides a detailed listing of the requirements specific to the system following a hierarchical numbering scheme. Section 4 addresses the modeling requirements which includes use cases diagrams, a state diagram, and a high-level class diagram. Section 5 discusses the proposed prototype and the details of the system with instructions on how to run it as well as sample scenarios. Section 6 contains a list of references used throughout the document. Finally, Section 7 provides contact information used for further inquiries. 2 Overall Description This section will cover general information about the project perspective, functions, and various requirements and constraints. More detailed descriptions of the project requirements and functions will be covered in latter sections. 2.1 Product Perspective This Software Requirements Specification document outlines Group 8�۪s solution to the client�۪s need to automate the recording of paint defects on vehicles during production. The topics covered in this document include: an introduction to the client�۪s problem, the team�۪s proposed solution to address the problem such as how the product system should function, specific system and client requirements, and diagrams illustrating use cases and scenarios when the system would be used. Additionally, a prototype of the proposed system with instructions on how to run it and sample scenarios is also provided in the latter portion of the document. At the end of the document, external sources that were referenced appear in a list. 1.1 Purpose The Software Requirements Specification (SRS) document serves to outline the document, the list below clearly specifies the meanings of these terms. - SRS (Software Requirements Specification) ��� : A document of the software system to be developed that discusses the functional and nonfunctional requirements. It also includes use cases that describe how users (client analysts) would interact with the software. - Defect ��� : An impurity, scratch, or other imperfection in the paint on a car. Analysts are trained to recognize all the different types of defects. Instructor: James Daly 1 Introduction This Software Requirements Specification document outlines Group 8�۪s solution to the client�۪s need to automate the recording of paint defects on vehicles during production. The topics covered in this document include: an introduction to the client�۪s problem, the team�۪s proposed solution to address the problem such as how the product system should function, specific system and client requirements, and diagrams illustrating use cases and scenarios when the system would be used. Additionally, a prototype of the proposed system with instructions on how to run it and sample scenarios is also provided in the latter portion of the document. At the end of the document, external sources that were referenced appear in a list. 1.1 Purpose","Assumptions : It is assumed that the end user program will be run on a Windows Vista or newer Windows system. It is also assumed that the technician using the end user program will have been trained to recognize all the types of paint defects, as it is not the software�s purpose to explain how to qualify defects, instead it only stores data on the defects."
1,"To clarify the unique terminology, acronyms, and abbreviations used in the document, the list below clearly specifies the meanings of these terms. - SRS (Software Requirements Specification) ��� : A document of the software system to be developed that discusses the functional and nonfunctional requirements. It also includes use cases that describe how users (client analysts) would interact with the software. document, the list below clearly specifies the meanings of these terms. - SRS (Software Requirements Specification) ��� : A document of the software system to be developed that discusses the functional and nonfunctional requirements. It also includes use cases that describe how users (client analysts) would interact with the software. - Defect ��� : An impurity, scratch, or other imperfection in the paint on a car. Analysts are trained to recognize all the different types of defects. This Software Requirements Specification document outlines Group 8�۪s solution to the client�۪s need to automate the recording of paint defects on vehicles during production. The topics covered in this document include: an introduction to the client�۪s problem, the team�۪s proposed solution to address the problem such as how the product system should function, specific system and client requirements, and diagrams illustrating use cases and scenarios when the system would be used. Additionally, a prototype of the proposed system with instructions on how to run it and sample scenarios is also provided in the latter portion of the document. At the end of the document, external sources that were referenced appear in a list. 1.1 Purpose The Software Requirements Specification (SRS) document serves to outline the technicians that are running paint inspections in the car factories. These technicians will be trained to identify types of paint defects, and to run a complete inspection of the entire paint job on a car. After identifying a paint defect of a particular type, these technicians will then enter the defect into the software to store its information in the database. The second type of user will be an administrative user that will utilize the reports the system produces. 2.4 Constraints The system will have two separate sets of hardware constraints, one for the end user program, and one for the server architecture. The end user system will need to run on a Windows computer, while the backend will need to run on appropriate server hardware. Both setups require an internet connection, and the server architecture requires enough memory to store the database of past defects. The exact amount of storage required will depend on how long the customer wishes to store past information for. 2.5 Assumptions and Dependencies The system will have two separate sets of hardware constraints, one for the end user program, and one for the server architecture. The end user system will need to run on a Windows computer, while the backend will need to run on appropriate server hardware. Both setups require an internet connection, and the server architecture requires enough memory to store the database of past defects. The exact amount of storage required will depend on how long the customer wishes to store past information for. 2.5 Assumptions and Dependencies It is assumed that the end user program will be run on a Windows Vista or newer","The end user system will initially need to present a user interface where they can select the factory they are working at, the checkpoint they are inspecting at, and the type of car being inspected. This information is stored on the server alongside the defect data that the user inputs later.
Second, another menu will allow users to indicate the location, severity, and type of defects. This menu will display a wireframe for the selected model of car, that allows users to place the defect in the appropriate location on the vehicle.
Lastly, end users will be able to run three types of reports over previously stored defect data. The first type of report is a QA report, which summarizes vehicle inspections over a specific time range, which is chosen by the user when running the report. It contains all the data stored for the defects over that period, the total number of cars inspected, and the defects per unit. It also contains several tables that show an aggregated car diagram with locations of all recorded defects, and a pie chart that displays the ratios of all defect types over this period. 
The second report is a Summary of Analysis report, which is a numeric summary of defects over a given period that were entered by a specific analyst. The user running the report is able to specify the date range to run the report on. This report contains the shift the analyst was on, the check point being inspected, and a summary of the number of defects, number of units, and number of defects per unit.
The final report type is a weekly chart, which outputs an Excel file containing weekly data over several months. The number of months to run the report on is selected by the user. This report contains weekly statistics for each facility, part name, machine, and data for all defects during that period."
1,"A user directory system is a feature that could be included in a future release. A user directory could store what factory a user works in, what shifts they work, and further information for users. Currently, any user can access any factory, and input defects for any shift, checkpoint, and model. A user directory system could be used to verify that a user is entering data for an appropriate shift, and reduce the possibility of mistakes when entering data. Another possible feature that could be added in the future is the release of another Windows system. It is also assumed that the technician using the end user program will have been trained to recognize all the types of paint defects, as it is not the software�۪s purpose to explain how to qualify defects, instead it only stores data on the defects. 2.6 Proportioning of Requirements A user directory system is a feature that could be included in a future release. A user directory could store what factory a user works in, what shifts they work, and further information for users. Currently, any user can access any factory, and input defects for any shift, checkpoint, and model. A user directory system could be used to verify that a user is entering data for an appropriate shift, and reduce the possibility of mistakes when entering data. The end user system will initially need to present a user interface where they can select the factory they are working at, the checkpoint they are inspecting at, and the type of car being inspected. This information is stored on the server alongside the defect data that the user inputs later. Second, another menu will allow users to indicate the location, severity, and type Fig 1. ��� Pictorial representation of the bigger system 2.2 Product Functions The end user system will initially need to present a user interface where they can select the factory they are working at, the checkpoint they are inspecting at, and the type of car being inspected. This information is stored on the server alongside the defect data that the user inputs later. record and track defects in the paint of cars on an assembly line. There are several constraints the system will need to operate under. First, the end user system will need to run on a Windows computer, while the backend will need to run on appropriate server hardware. The end user system will need to present a user interface that allows a user to indicate the location, severity, and type of defects. In addition, users will be able to query server data by running reports. The frontend and backend will communicate using HTTP requests to both send and receive data from the database. Template based on IEEE Std 830-1998 for SRS. Modifications (content and ordering of information) have been made by James Daly, Michigan State University (dalyjame at cse.msu.edu) Fig 1. ��� Pictorial representation of the bigger system 2.2 Product Functions The end user system will initially need to present a user interface where they can","This project is designed to be used by employees of several automotive plants to record and track defects in the paint of cars on an assembly line. There are several constraints the system will need to operate under. First, the end user system will need to run on a Windows computer, while the backend will need to run on appropriate server hardware. The end user system will need to present a user interface that allows a user to indicate the location, severity, and type of defects. In addition, users will be able to query server data by running reports. The frontend and backend will communicate using HTTP requests to both send and receive data from the database."